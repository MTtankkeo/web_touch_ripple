!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).index={})}(this,(function(exports){"use strict";const createRippleKeyframesStyle=()=>{const e=document.createElement("style");return e.appendChild(document.createTextNode("\n        @keyframes ripple-fadein {\n            from {\n                opacity: 0;\n                transform-origin: center;\n                transform: scale(var(--ripple-lower-scale, 0.3));\n            }\n            30% { opacity: 1; }\n            to  { transform: scale(var(--ripple-upper-scale, 1)); }\n        }\n        \n        @keyframes ripple-fadeout {\n            from { opacity: 1; } to { opacity: 0; }\n        }\n    ")),e};class Point{constructor(e,t){this.x=e,this.y=t}distance(e,t){let i=this.x-e,s=this.y-t;return Math.sqrt(i*i+s*s)}}var TouchRippleEffectStatus,PointerType,GestureRecognizerResult;!function(e){e[e.NONE=0]="NONE",e[e.ACCEPTED=1]="ACCEPTED",e[e.REJECTED=2]="REJECTED"}(TouchRippleEffectStatus||(TouchRippleEffectStatus={}));class TouchRippleEffect{constructor(e,t,i,s){this.position=e,this.callback=t,this.isRejectable=i,this.isWait=s,this._statusListeners=[],this._status=i?TouchRippleEffectStatus.NONE:TouchRippleEffectStatus.ACCEPTED}get status(){return this._status}set status(e){this._status!=e&&(this._status=e,this._statusListeners.forEach((t=>t(e))))}set statusListener(e){this._statusListeners.push(e)}fadeout(e,t){t.style.animation="ripple-fadeout var(--ripple-fadeout-duration, 0.3s)",t.onanimationend=()=>e.removeChild(t)}notify(){this.callback&&this.callback()}createElement(e,t){const i=e.getBoundingClientRect(),s=this.position.x-i.left,n=this.position.y-i.top,r=e.offsetWidth/2,o=e.offsetHeight/2;var a=e.getPropertyByName("--ripple-blur-radius")||"10px",c=Number(a.replace("px",""));e.getAttribute("attribute");let h=2*new Point(r,o).distance(0,0);h+=2*new Point(r,o).distance(s,n),h+=2*c;const p=document.createElement("div");return p.classList.add("ripple"),p.style.position="absolute",p.style.left=`${s}px`,p.style.top=`${n}px`,p.style.width=`${h}px`,p.style.height=`${h}px`,p.style.pointerEvents="none",p.style.translate="-50% -50%",p.style.borderRadius="50%",p.style.backgroundColor="var(--ripple, rgba(0, 0, 0, 0.2))",p.style.animation="ripple-fadein var(--ripple-fadein-duration, 0.2s)",p.style.animationFillMode="forwards",p.style.filter=`blur(${a})`,this.isWait||(this.status==TouchRippleEffectStatus.ACCEPTED&&this.notify(),this.status==TouchRippleEffectStatus.NONE&&(this.statusListener=e=>{e==TouchRippleEffectStatus.ACCEPTED&&this.notify()})),p.onanimationend=()=>{this.isRejectable&&this.status==TouchRippleEffectStatus.NONE?this.statusListener=e=>{e==TouchRippleEffectStatus.ACCEPTED&&this.isWait&&this.notify(),this.fadeout(t,p)}:(this.isWait&&this.notify(),this.fadeout(t,p))},p}}!function(e){e[e.DOWN=0]="DOWN",e[e.MOVE=1]="MOVE",e[e.UP=2]="UP",e[e.CANCEL=3]="CANCEL"}(PointerType||(PointerType={})),function(e){e[e.ACCEPT=0]="ACCEPT",e[e.REJECT=1]="REJECT"}(GestureRecognizerResult||(GestureRecognizerResult={}));class GestureRecognizer{constructor(){this.listeners=[]}accept(){this.perform(GestureRecognizerResult.ACCEPT),this.onAccept()}reject(){this.perform(GestureRecognizerResult.REJECT),this.onReject()}onAccept(){}onReject(){}dispose(){}perform(e){this.dispose(),this.listeners.forEach((t=>t(e)))}}class TouchRippleGestureRecogzier extends GestureRecognizer{constructor(){super()}createPosition(e){return{x:e.clientX,y:e.clientY}}handlePointer(e,t){const i=this.position=this.createPosition(e);t==PointerType.DOWN&&this.pointerDown(i),t==PointerType.MOVE&&this.pointerMove(i),t==PointerType.UP&&this.pointerUp(i),t==PointerType.CANCEL&&(this.reject(),this.pointerCancel(i))}pointerDown(e){}pointerMove(e){}pointerUp(e){}pointerCancel(e){}}class GestureArena{constructor(){this.builders=[],this.recognizers=[]}registerBuilder(e){this.builders.push(e)}attach(e){this.recognizers.push(e)}detach(e){this.recognizers=this.recognizers.filter((t=>t!=e))}rejectBy(e){this.detach(e)}acceptBy(e){this.recognizers.forEach((t=>t!=e?t.reject():void 0)),this.recognizers=[]}acceptWith(e){e.accept(),this.acceptBy(e)}reset(){this.builders=[],this.recognizers=[]}createRecognizer(e){const t=e();return t.listeners.push((e=>{e==GestureRecognizerResult.REJECT?this.rejectBy(t):this.acceptBy(t)})),t}checkCycle(){0==this.recognizers.length&&(this.recognizers=this.builders.map((e=>this.createRecognizer(e))))}handlePointer(e,t){t==PointerType.DOWN&&this.checkCycle(),t==PointerType.UP&&queueMicrotask((()=>{1==this.recognizers.length&&this.acceptWith(this.recognizers[0])})),this.recognizers.forEach((i=>i.handlePointer(e,t)))}}class TapGestureRecognizer extends TouchRippleGestureRecogzier{constructor(e,t,i,s,n){super(),this.onTap=e,this.onTapRejectable=t,this.onTapAccept=i,this.onTapReject=s,this.previewDuration=n,this.isRejectable=!1}pointerDown(e){this.timerId=setTimeout((()=>{this.isRejectable=!0,this.onTapRejectable(e)}),this.previewDuration)}dispose(){clearTimeout(this.timerId)}onAccept(){this.isRejectable?this.onTapAccept(this.position):this.onTap(this.position)}onReject(){this.isRejectable&&this.onTapReject(this.position)}}class TouchRippleElement extends HTMLElement{constructor(){super(...arguments),this.arena=new GestureArena}set ontap(e){this._ontap=e,this.initBuiler()}get child(){return this.firstElementChild}getPropertyByName(e,t=this){return getComputedStyle(t).getPropertyValue(e)}initBuiler(){this.arena.reset(),null!=this._ontap&&this.arena.registerBuilder((()=>new TapGestureRecognizer((e=>this.showEffect(e,this._ontap,!1)),(e=>this.showEffect(e,this._ontap,!0)),(()=>this.activeEffect.status=TouchRippleEffectStatus.ACCEPTED),(()=>this.activeEffect.status=TouchRippleEffectStatus.REJECTED),150)))}connectedCallback(){this.style["-webkit-tap-highlight-color"]="transparent",requestAnimationFrame((()=>{const e=this.child;if(null==e)throw"This element must be exists child element.";e.style.position="relative",e.style.overflow="hidden",e.style.userSelect="none",this.onpointerdown=e=>this.arena.handlePointer(e,PointerType.DOWN),this.onpointermove=e=>this.arena.handlePointer(e,PointerType.MOVE),this.onpointerup=e=>this.arena.handlePointer(e,PointerType.UP),this.onpointercancel=e=>this.arena.handlePointer(e,PointerType.CANCEL),this.onpointerleave=e=>this.arena.handlePointer(e,PointerType.CANCEL)}))}showEffect(e,t,i){this.activeEffect=new TouchRippleEffect(e,t,i,this.hasAttribute("wait")),this.child.appendChild(this.activeEffect.createElement(this,this.child))}static get observedAttributes(){return["ontap"]}attributeChangedCallback(attrName,oldVal,newVal){null!=newVal&&"ontap"==attrName&&(this.ontap=()=>eval(newVal))}}customElements.define("touch-ripple",TouchRippleElement),document.head.appendChild(createRippleKeyframesStyle()),exports.GestureArena=GestureArena,exports.GestureRecognizer=GestureRecognizer,exports.TouchRippleElement=TouchRippleElement}));
//# sourceMappingURL=index.js.map
